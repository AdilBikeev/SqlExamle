<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet" targetNamespace="http://tempuri.org/DataSet.xsd" xmlns:mstns="http://tempuri.org/DataSet.xsd" xmlns="http://tempuri.org/DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LoginsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LoginsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Example_15_SQL_.Properties.Settings.GlobalReference.Default.LoginsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LoginsTableAdapter" GeneratorDataComponentClassName="LoginsTableAdapter" Name="Logins" UserDataComponentName="LoginsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LoginsConnectionString (Settings)" DbObjectName="Logins.dbo.Logins" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Logins] WHERE (([intId] = @Original_intId) AND ((@IsNull_nvcLogins = 1 AND [nvcLogins] IS NULL) OR ([nvcLogins] = @Original_nvcLogins)) AND ((@IsNull_nvcPassword = 1 AND [nvcPassword] IS NULL) OR ([nvcPassword] = @Original_nvcPassword)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nvcLogins" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nvcLogins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nvcPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nvcPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Logins] ([nvcLogins], [nvcPassword]) VALUES (@nvcLogins, @nvcPassword);
SELECT intId, nvcLogins, nvcPassword FROM Logins WHERE (intId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nvcLogins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nvcPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT intId, nvcLogins, nvcPassword FROM dbo.Logins</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Logins] SET [nvcLogins] = @nvcLogins, [nvcPassword] = @nvcPassword WHERE (([intId] = @Original_intId) AND ((@IsNull_nvcLogins = 1 AND [nvcLogins] IS NULL) OR ([nvcLogins] = @Original_nvcLogins)) AND ((@IsNull_nvcPassword = 1 AND [nvcPassword] IS NULL) OR ([nvcPassword] = @Original_nvcPassword)));
SELECT intId, nvcLogins, nvcPassword FROM Logins WHERE (intId = @intId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nvcLogins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nvcPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nvcLogins" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nvcLogins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nvcLogins" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nvcPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nvcPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nvcPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="intId" ColumnName="intId" DataSourceName="Logins.dbo.Logins" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@intId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intId" DataSetColumn="intId" />
              <Mapping SourceColumn="nvcLogins" DataSetColumn="nvcLogins" />
              <Mapping SourceColumn="nvcPassword" DataSetColumn="nvcPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataSet" msprop:Generator_UserDSName="DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Logins" msprop:Generator_TableClassName="LoginsDataTable" msprop:Generator_TableVarName="tableLogins" msprop:Generator_TablePropName="Logins" msprop:Generator_RowDeletingName="LoginsRowDeleting" msprop:Generator_RowChangingName="LoginsRowChanging" msprop:Generator_RowEvHandlerName="LoginsRowChangeEventHandler" msprop:Generator_RowDeletedName="LoginsRowDeleted" msprop:Generator_UserTableName="Logins" msprop:Generator_RowChangedName="LoginsRowChanged" msprop:Generator_RowEvArgName="LoginsRowChangeEvent" msprop:Generator_RowClassName="LoginsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintId" msprop:Generator_ColumnPropNameInRow="intId" msprop:Generator_ColumnPropNameInTable="intIdColumn" msprop:Generator_UserColumnName="intId" type="xs:int" />
              <xs:element name="nvcLogins" msprop:Generator_ColumnVarNameInTable="columnnvcLogins" msprop:Generator_ColumnPropNameInRow="nvcLogins" msprop:Generator_ColumnPropNameInTable="nvcLoginsColumn" msprop:Generator_UserColumnName="nvcLogins" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nvcPassword" msprop:Generator_ColumnVarNameInTable="columnnvcPassword" msprop:Generator_ColumnPropNameInRow="nvcPassword" msprop:Generator_ColumnPropNameInTable="nvcPasswordColumn" msprop:Generator_UserColumnName="nvcPassword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Logins" />
      <xs:field xpath="mstns:intId" />
    </xs:unique>
  </xs:element>
</xs:schema>